import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

def DotMat(S1,S2): # Dot matrix for initial computation with (0 & 1)
    Ini = np.zeros((len(S1),len(S2)),dtype="int32")
    Ini = Ini.tolist()
    i = 0
    for i in range(len(S1)):
        for j in range(len(S2)):
            if(S1[i]==S2[j]):
                Ini[j][i]=1
    return Ini
    
    
def DotMatS(S1,S2):  # Dot matrix for initial computation with ( Nucleotides)
    Ini = np.zeros((len(S1),len(S2)),dtype="int32")
    Ini = Ini.tolist()
    i = 0
    for i in range(len(S1)):
        for j in range(len(S2)):
            if(S1[i]==S2[j]):
                Ini[j][i]=S1[i]
    return Ini
    
def diag(X):  # For getting Diagonals of matrix
    Diag = []
    X = np.array(X)
    l = len(S1)+len(S2)
    for i in range(l-1):
        Diag.append(np.diag(X, i-len(S1)+1).tolist())
    return Diag

#For removing the diagonal with only zeros
def count(arr,string): 
    x=0
    for i in range(len(arr)):
        if(arr[i]==string):
            x+=1
    return x    

def remove_zeros(dia):
    arr=[]
    for i in range(len(dia)):
        length=len(dia[i])
        if (count(dia[i],'0')==length):
            pass
        else:
            arr.append(dia[i])
    return arr
    
def List2Seq(o):  # Finally convert the list to sequence
    r = []
    t = []
    temp = ''
    for i in range(len(o)):
        for j in range(len(o[i])):
            temp = temp + o[i][j]
        r.append(temp)
        temp = ''    
    seq = [i.rstrip('0').lstrip('0').split('0') for i in r]
    for i in range(len(seq)):
        for j in range(len(seq[i])):
            if(len(seq[i][j])>=2 and seq[i][j]!=''):
                t.append(seq[i][j])
    return t
    
def String(S1,S2):  # To make the length of the strings equal
    if(len(S1)==len(S2)):
        return S1,S2
    
    if(len(S1)<len(S2)):
        S1=S1+"-"
        return String(S1,S2)
    elif(len(S1)>len(S2)):
        S2=S2+"-"
        return String(S1,S2)
        
def Convert(string):  # Convert a string to List of String
    list1=[] 
    list1[:0]=string 
    return list1 
    
 
def DotPlot_and_common_seq(S1,S2):
    S1,S2=String(S1,S2)
    print("Seqence 1  :  ",S1)
    print("Seqence 2  :  ",S2)
    D=DotMat(S1,S2)
    S1_S=(Convert(S1)) 
    S2_S=(Convert(S2)) 
    x=pd.DataFrame(np.array(D))
    x.columns=S1_S
    x.index=S2_S
    print("      ")
    print("Question 1:  ")
    print("      ")
    print(x)
    print("      ")
    print("      ")
    print("Question 2:  ")
    print("***** Visualisation *****")
    plt.xticks(range(0,len(S1)), S1, rotation ='horizontal') 
    plt.yticks(range(0,len(S2)), S2, rotation ='vertical') 
    plt.imshow(D)
    plt.show()
    DS=DotMatS(S1,S2)
    Diagonals=diag(DS)
    Diagonals=remove_zeros(Diagonals)
    Seq=List2Seq(Diagonals)
    print("      ")
    print("      ")
    print("Question 3:  ")
    print("***** The Common Subsequences *****  ")
    print(Seq)
    print("      ")
    print("      ")
    print("Question 4:  ")
    print("***** Longest Common Subsequence *****")
    max_len = -1
    for ele in Seq: 
        if(len(ele) > max_len): 
            max_len = len(ele) 
            res = ele 
    print(res)
    return res 
    
S1 = "ACCTGAGCTCACCTGAGTTA"
S2 = "ACCTGAGCTCACCTGAGTTA"
z=DotPlot_and_common_seq(S1,S2)
